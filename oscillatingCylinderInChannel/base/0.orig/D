/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      D;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    cylinder
    {
#if 1
        type            fixedDisplacement;
        displacementSeries
        {
            file        "$FOAM_CASE/constant/timeVsDisplacement";
            outOfBounds clamp;
        }
#else
        name    D_cylinder;
        type    codedFixedValue;
        code
        #{
            constexpr scalar x0 = 1.1; // [m]
            constexpr scalar A = 0.25; // [m]
            constexpr scalar f = 0.25; // [Hz]
            constexpr scalar omega = constant::mathematical::twoPi*f; // [rad/s]
            const scalar t = db().time().value();
            const vector x(x0 + A*sin(omega*t), 0.0, 0.0);
            operator==(x);
        #};
#endif
        value           uniform (0 0 0);
    }

    "left|right"
    {
        type            fixedDisplacement;
        value           uniform (0 0 0);
    }

    "up|down"
    {
        type            slip;
    }

    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
