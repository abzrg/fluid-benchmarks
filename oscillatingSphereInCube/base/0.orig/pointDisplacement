/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       pointVectorField;
    object      pointDisplacement;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    sphere
    {
        type                    codedFixedValue;
        name                    oscillatingSphere;
        code
        #{
            using constant::mathematical::pi;

            const scalar D = 1.0;
            const scalar h = 0.125*D;
            const scalar t = this->db().time().value();

            operator==(h*(1.0 - Foam::cos(2*pi*t))*vector(1, 0, 0));
        #};
    }

    "xmin|xmax"
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }

    "ymin|ymax|zmin|zmax"
    {
        type            slip;
        value           uniform (0 0 0);
    }

    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
