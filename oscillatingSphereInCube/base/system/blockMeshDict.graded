/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

// Geometric parameters
sphereDiameter      1;
sphereRadius        ${{ 0.5*$sphereDiameter }};
cubeEdgeLength      ${{ 2*$sphereDiameter }};

geometry
{
    sphere
    {
        type   sphere;
        origin (0 0 0);
        radius $sphereRadius;
    }
}

// Mnemonics [vs]: [S]phere [V]ertex coordinate
// NOTE: The following value for `vs` gives the best fit to the sphere surface.
//       With this value, no or negligible point displacement, using
//       projectPatchToSphere, would be needed.
vs      ${{ 0.2886751345948129 }};

// Mnemonics [vc]: [C]ube [V]ertex coordinate
vc      ${{ $sphereDiameter }};

vertices
(
    // z = -$vc
    (-$vc -$vc -$vc)    // 00
    (-$vs -$vc -$vc)    // 01
    ( $vs -$vc -$vc)    // 02
    ( $vc -$vc -$vc)    // 03

    (-$vc -$vs -$vc)    // 04
    (-$vs -$vs -$vc)    // 05
    ( $vs -$vs -$vc)    // 06
    ( $vc -$vs -$vc)    // 07

    (-$vc  $vs -$vc)    // 08
    (-$vs  $vs -$vc)    // 09
    ( $vs  $vs -$vc)    // 10
    ( $vc  $vs -$vc)    // 11

    (-$vc  $vc -$vc)    // 12
    (-$vs  $vc -$vc)    // 13
    ( $vs  $vc -$vc)    // 14
    ( $vc  $vc -$vc)    // 15

    // z = -$vs
    (-$vc -$vc -$vs)    // 16
    (-$vs -$vc -$vs)    // 17
    ( $vs -$vc -$vs)    // 18
    ( $vc -$vc -$vs)    // 19

    (-$vc -$vs -$vs)    // 20
    (-$vs -$vs -$vs)    // 21
    ( $vs -$vs -$vs)    // 22
    ( $vc -$vs -$vs)    // 23

    (-$vc  $vs -$vs)    // 24
    (-$vs  $vs -$vs)    // 25
    ( $vs  $vs -$vs)    // 26
    ( $vc  $vs -$vs)    // 27

    (-$vc  $vc -$vs)    // 28
    (-$vs  $vc -$vs)    // 29
    ( $vs  $vc -$vs)    // 30
    ( $vc  $vc -$vs)    // 31

    // z =  $vs
    (-$vc -$vc  $vs)    // 32
    (-$vs -$vc  $vs)    // 33
    ( $vs -$vc  $vs)    // 34
    ( $vc -$vc  $vs)    // 35

    (-$vc -$vs  $vs)    // 36
    (-$vs -$vs  $vs)    // 37
    ( $vs -$vs  $vs)    // 38
    ( $vc -$vs  $vs)    // 39

    (-$vc  $vs  $vs)    // 40
    (-$vs  $vs  $vs)    // 41
    ( $vs  $vs  $vs)    // 42
    ( $vc  $vs  $vs)    // 43

    (-$vc  $vc  $vs)    // 44
    (-$vs  $vc  $vs)    // 45
    ( $vs  $vc  $vs)    // 46
    ( $vc  $vc  $vs)    // 47

    // z =  $vc
    (-$vc -$vc  $vc)    // 48
    (-$vs -$vc  $vc)    // 49
    ( $vs -$vc  $vc)    // 50
    ( $vc -$vc  $vc)    // 51

    (-$vc -$vs  $vc)    // 52
    (-$vs -$vs  $vc)    // 53
    ( $vs -$vs  $vc)    // 54
    ( $vc -$vs  $vc)    // 55

    (-$vc  $vs  $vc)    // 56
    (-$vs  $vs  $vc)    // 57
    ( $vs  $vs  $vc)    // 58
    ( $vc  $vs  $vc)    // 59

    (-$vc  $vc  $vc)    // 60
    (-$vs  $vc  $vc)    // 61
    ( $vs  $vc  $vc)    // 62
    ( $vc  $vc  $vc)    // 63
);

// Mesh density level. Higher values correspond to finer meshes
//
// One can specify the mesh density level from the command-line by simply using
// the following:
//
//    ```console
//    $ MESH_LEVEL=<N> blockMesh
//    ```
// or
//    ```console
//    $ MESH_LEVEL=<N> ./Allrun
//    ```
MESH_LEVEL ${MESH_LEVEL:-1};

#if #eval "$MESH_LEVEL < 1"
    #message "--> Error: Invalid mesh level: MESH_LEVEL = $MESH_LEVEL."
    #message "           Mesh level must be a positive integer."
    {{}}
#else
    // Desired total growth factor of cells per refinement level
    // scaleFactor = (n+1)^3 / n^3
    scaleFactor 4;

    // Mnemonics [n]: [N]umbers of cells in each direction
    n       ${{ round(pow(pow($scaleFactor,1.0/3.0), $MESH_LEVEL)) }};

    #message "MESH_LEVEL: $MESH_LEVEL"
#endif

blocks
(
    // Bottom layer: -$vc -> -$vs

        hex ( 0  1  5  4 16 17 21 20) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 1  2  6  5 17 18 22 21) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 2  3  7  6 18 19 23 22) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 4  5  9  8 20 21 25 24) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 5  6 10  9 21 22 26 25) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 6  7 11 10 22 23 27 26) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 8  9 13 12 24 25 29 28) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex ( 9 10 14 13 25 26 30 29) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (10 11 15 14 26 27 31 30) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

    // Middle layer: -$vs -> $vs

        hex (16 17 21 20 32 33 37 36) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (17 18 22 21 33 34 38 37) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (18 19 23 22 34 35 39 38) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (20 21 25 24 36 37 41 40) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        // Sphere
        // hex (21 22 26 25 37 38 42 41) ($n $n $n) simpleGrading (...)

        hex (22 23 27 26 38 39 43 42) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (24 25 29 28 40 41 45 44) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (25 26 30 29 41 42 46 45) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (26 27 31 30 42 43 47 46) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

    // Top layer: $vs -> $vc

        hex (32 33 37 36 48 49 53 52) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (33 34 38 37 49 50 54 53) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (34 35 39 38 50 51 55 54) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (36 37 41 40 52 53 57 56) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (37 38 42 41 53 54 58 57) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (38 39 43 42 54 55 59 58) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (40 41 45 44 56 57 61 60) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (41 42 46 45 57 58 62 61) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )

        hex (42 43 47 46 58 59 63 62) ($n $n $n)
        simpleGrading
        (
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
            (
                (0.25 0.3 2)
                (0.5  0.4 1)
                (0.25 0.3 0.5)
            )
        )
);

edges
(
    arc 21 22 origin (0 0 0)
    arc 22 26 origin (0 0 0)
    arc 26 25 origin (0 0 0)
    arc 25 21 origin (0 0 0)

    arc 37 38 origin (0 0 0)
    arc 38 42 origin (0 0 0)
    arc 42 41 origin (0 0 0)
    arc 41 37 origin (0 0 0)

    arc 25 41 origin (0 0 0)
    arc 37 21 origin (0 0 0)
    arc 42 26 origin (0 0 0)
    arc 38 22 origin (0 0 0)
);

faces
(
    project (25 21 37 41) sphere
    project (21 22 38 37) sphere
    project (22 26 42 38) sphere
    project (26 25 41 42) sphere
    project (22 21 25 26) sphere
    project (37 38 42 41) sphere
);

boundary
(
    xmin
    {
        type wall;
        inGroups (noSlipWalls);
        faces
        (
            ( 4  0 16 20)
            ( 8  4 20 24)
            (12  8 24 28)
            (20 16 32 36)
            (24 20 36 40)
            (28 24 40 44)
            (36 32 48 52)
            (40 36 52 56)
            (44 40 56 60)
        );
    }
    xmax
    {
        type wall;
        inGroups (noSlipWalls);
        faces
        (
            ( 3  7 23 19)
            ( 7 11 27 23)
            (11 15 31 27)
            (19 23 39 35)
            (23 27 43 39)
            (27 31 47 43)
            (35 39 55 51)
            (39 43 59 55)
            (43 47 63 59)
        );
    }
    ymin
    {
        type wall;
        inGroups (slipWalls);
        faces
        (
            ( 0  1 17 16)
            ( 1  2 18 17)
            ( 2  3 19 18)
            (16 17 33 32)
            (17 18 34 33)
            (18 19 35 34)
            (32 33 49 48)
            (33 34 50 49)
            (34 35 51 50)
        );
    }
    ymax
    {
        type wall;
        inGroups (slipWalls);
        faces
        (
            (13 12 28 29)
            (14 13 30 29)
            (15 14 31 30)
            (29 28 44 45)
            (30 29 45 46)
            (31 30 46 47)
            (45 44 60 61)
            (46 45 61 62)
            (47 46 62 63)
        );
    }
    zmin
    {
        type wall;
        inGroups (slipWalls);
        faces
        (
            ( 1  0  4  5)
            ( 2  1  5  6)
            ( 3  2  6  7)
            ( 5  4  8  9)
            ( 6  5  9 10)
            ( 7  6 10 11)
            ( 9  8 13 12)
            (10  9 13 14)
            (11 10 14 15)
        );
    }
    zmax
    {
        type wall;
        inGroups (slipWalls);
        faces
        (
            (48 49 53 52)
            (49 50 54 53)
            (50 51 55 54)
            (52 53 57 56)
            (53 54 58 57)
            (54 55 59 58)
            (56 57 61 60)
            (57 58 62 61)
            (58 59 63 62)
        );
    }
    sphere
    {
        type wall;
        inGroups (movingWall);
        faces
        (
            (22 21 37 38)
            (26 22 38 42)
            (25 26 42 41)
            (21 25 41 37)
            (21 22 26 25)
            (38 37 41 42)
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
